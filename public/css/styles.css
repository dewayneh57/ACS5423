/* *******************************************************************************
 * 
 * Styleing for the title bar and options
 * 
 * ***************************************************************************** */ 

 /*
 * Style for the body of the page 
 */
body {
  font-family: Arial, sans-serif;
}

/* 
 * Style for the banner bar
 */
.banner {
  background-color: #182e31;
  padding: 20px;
  text-align: center;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 72px;
}

/* 
 * Image in the banner
 */
.banner img {
  position: absolute;
  left: 0;
  top: 0;
  height: 100%;
}

/*
 * Style for the options button in the banner.
 */ 
#optionsButton {
  position: fixed;
  top: 20px;
  right: 20px;
  background: transparent;
  color: white;
  font-weight: bold;
  border: none;
  font-size: 16px;
  cursor: pointer;
  z-index: 1000; 
}

/*
 * Styling for any hovers over the options button.
 */
#optionsButton:hover {
  text-decoration: underline;
}

/* *******************************************************************************
 * 
 * Filters are the controls at the top of all tab panes that allow the user to 
 * select various values, ranges of values, keywords, etc.  The filters are applied
 * to any queries performed to create the results shown to the user. 
 * 
 * ***************************************************************************** */ 

/*
 * The tab pane (container) below the banner
 */
.tab-container {
  position: absolute;
  top: 120px;
  width: 100%;
  left: 0;
}

/*
 * Use flex-box for the tabs 
 */
.tab-buttons {
  display: flex;
  border-bottom: none;
}

/*
 * Tab buttons are rounded top, left-aligned text.
 * use a border to separate the tabs from the content 
 * pane. 
 */
.tab-buttons button {
  flex: 1;
  padding: 10px;
  font-size: 16px;
  text-align: left;
  background: lightgray;
  border: 2px solid blue;
  transition: all 0.2s ease;
  border-top-left-radius: 8px;
  border-top-right-radius: 8px;
}

/*
 * Also, change the cursor when the user hovers
 * over the button. 
 */
.tab-buttons button:hover {
  cursor: pointer;
}

/*
 * The currently active tab is highlighted by changing 
 * it's border bottom to none so it appears to be part 
 * of the content and changing its background color to 
 * white to match the content pane.
 */
.tab-buttons button.active {
  background: #fff;
  border-bottom: none;
  font-weight: bold;
  z-index: 2;
}

/*
 * The content "pane" under the tab heading. 
 */ 
.tab-content {
  display: none;
  padding: 20px;
  border: 2px solid blue;
  border-top: none;
  background: #fff;
}

/*
 * How the ul lists are styled.
 */ 
.tab-content ul {
  border: thin solid gray;
}

/*
 * Displays the content pane when the "active" style is present. 
 */ 
.tab-content.active {
  display: block;
}

/* *******************************************************************************
 * 
 * Filters are the controls at the top of all tab panes that allow the user to 
 * select various values, ranges of values, keywords, etc.  The filters are applied
 * to any queries performed to create the results shown to the user. 
 * 
 * ***************************************************************************** */ 

/* The main class for all filters */ 
.filter {
  margin-left: 0;
  flex: 0 0 auto;
  min-width: 220px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
}

/* A group of filters such as used on the nutrients tab when there are more than one 
 * filter 
 */ 
.filter-group {
  border: 2px solid #007acc;
  border-radius: 8px;
  padding: 10px;
  margin: 0 0;
  background-color: #f8f9fa;
}

/* Styles the legend of the filter group */ 
.filter-group legend {
  font-weight: bold;
  padding: 0 8px;
}

/* A filter row is a combination of a label and the filter control */ 
.filter-row {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-bottom: 10px;
}

/* Style the label in a filter row */ 
.filter-label {
  display: flex;
  align-items: center;
  font-weight: bold;
  gap: 5px;
}

/* *******************************************************************************
 * 
 * The range selections for the macro nutrients uses an idea I saw used on a web 
 * site that allowed the user to specify a minimum and maximum value using a slider
 * with two "thumbs", one being the min and the other the max value.  
 *
 * To repeat this effect, I used two slider controls superimposed on top of each
 * other, with the minimum slider beneath the maximum slider.  Each slider also 
 * has a text entry field at either end to enter the min and max values textually
 * if desired.  These styles are used to define how this is all displayed, working
 * in conjunction with js code to sync the values and ensure min <= max at all times.
 * 
 * ***************************************************************************** */ 

 /* A slider-row is the collection of any labels, check-boxes, and the min value, 
 min and max sliders, and the max value. */ 
.slider-row {
  display: grid;
  grid-template-columns: auto 150px 80px 1fr 80px;
  align-items: center;
  gap: 5px;
}

/* The slider title is the combination of any label and the slider in a single row */ 
.slider-title {
  min-width: 50px;
  text-align: right;
}

/* The slider track is the combination of the min and max sliders superimposed. */
.slider-track {
  position: relative;
  flex: 1;
  height: 30px;
}

.slider-track input[type=range] {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: transparent;
  pointer-events: none; 
  appearance: none;
}

/*
 * Since the range sliders are two slider controls overlaid, we need to make the slider
 * track of the top slider (the max value) transparent to keep from messing up the 
 * min thumb. 
 */ 
#carbMaxRange::-webkit-slider-runnable-track,
#proteinMaxRange::-webkit-slider-runnable-track,
#fatMaxRange::-webkit-slider-runnable-track {
  background: transparent;
}

/*
 * enable all events for the "thumbs" of the sliders.
 */ 
.slider-track input[type=range]::-webkit-slider-thumb {
  pointer-events: all;
}

/*
 * The minimum range thumb is above the slider track but below the max thumb.
 */ 
input[id$="MinRange"]::-webkit-slider-thumb {
  background: green;
  pointer-events: all;
  -webkit-appearance: none;
  border-radius: 20%;
  width: 24px;
  height: 24px;
  margin-top: -9px;
}

/*
 * The max thumb is above everything. 
 */
input[id$="MaxRange"]::-webkit-slider-thumb {
  background: red;
  pointer-events: all;
  -webkit-appearance: none;
  border-radius: 20%;
  width: 24px;
  height: 24px;
  margin-top: -9px;
}

/*
 * Because I'm taking full control over the sliders, I need to style the track as well. 
 */ 
.slider-track input[type=range]::-webkit-slider-runnable-track {
  height: 6px;
  background: blue;
  border-radius: 3px;
}

input[type="number"] {
  width: 60px;
  padding: 4px;
  text-align: center;
}

/* *******************************************************************************
 * 
 * Styling of the detail pane that is opened when the user clicks on one or more 
 * foods
 * 
 * ***************************************************************************** */ 

 .food-detail {
  border: 1px solid #ccc;
  padding: 10px;
  margin: 5px 20px;
  background-color: #f9f9f9;
  border-radius: 6px;
  font-size: 0.9em;
}

/* *******************************************************************************
 * 
 * The range selections for the macro nutrients uses an idea I saw used on a web 
 * site that allowed the user to specify a minimum and maximum value using a slider
 * with two "thumbs", one being the min and the other the max value.  
 *
 * To repeat this effect, I used two slider controls superimposed on top of each
 * other, with the minimum slider beneath the maximum slider.  Each slider also 
 * has a text entry field at either end to enter the min and max values textually
 * if desired.  These styles are used to define how this is all displayed, working
 * in conjunction with js code to sync the values and ensure min <= max at all times.
 * 
 * ***************************************************************************** */ 

 /* The dialog itself */ 
 .dialog {
  display: none;
  position: fixed;
  z-index: 100; 
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/* The content of the dialog */ 
.dialog-content {
  pointer-events: auto;
  background-color: #bacdef;
  color: black;
  margin: 15% auto;
  padding: 20px;
  border-radius: 8px;
  width: 300px;
  position: absolute;
  top: 25%;
  left: 25%;
  box-shadow: 0 2px 10px rgba(0,0,0);
}

.dialog.open {
  display: block; 
  pointer-events: auto;
}

body.dialog-open {
  pointer-events: none;  
  user-select: none;
}

body.dialog-open *:not(.dialog *) {
  opacity: 0.7;
}

.dialog-close {
  position: absolute;
  right: 10px;
  top: 5px;
  font-size: 20px;
  cursor: pointer;
}

